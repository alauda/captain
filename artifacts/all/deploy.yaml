---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: helmrequests.app.alauda.io
spec:
  group: app.alauda.io
  version: v1alpha1
  names:
    kind: HelmRequest
    listKind: HelmRequestList
    plural: helmrequests
    singular: helmrequest
    shortNames:
      - hr
  additionalPrinterColumns:
    - name: Chart
      type: string
      description: The chart of this HelmRequest
      JSONPath: .spec.chart
    - name: Version
      type: string
      description: Version of this chart
      JSONPath: .spec.version
    - name: Namespace
      type: string
      description: The namespace which the chart deployed to
      JSONPath: .spec.namespace
    - name: AllCluster
      type: boolean
      description: Is this chart will be installed to all cluster
      JSONPath: .spec.installToAllClusters
    - name: Phase
      type: string
      description: The phase of this HelmRequest
      JSONPath: .status.phase
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  scope: Namespaced
  subresources:
    status: {}
  validation:
    # openAPIV3Schema is the schema for validating custom objects.
    openAPIV3Schema:
      properties:
        spec:
          description: HelmRequestSpec defines the deploy info of a helm chart
          type: object
          required:
            - chart
          properties:
            chart:
              type: string
              description: Chart is a helm chart name ,in the format of <repo>/<chart>
            namespace:
              type: string
              description: Namespace is the namespace this chart will be installed to. If not set, consider it's metadata.namespace
            releaseName:
              type: string
              description: ReleaseName is the Release name. If not set, consider it's metadata.name
            clusterName:
              type: string
              description: ClusterName is the target cluster name, where this chart will be installed to. If not set, this chart will be installed to the current cluster.
            dependencies:
              type: array
              description: Dependencies defines the HelmRequest list this HelmRequest will depends to, it will wait for them to be Synced
              items:
                type: string
            installToAllClusters:
              description: InstallToAllClusters decide if we want to install this chart to all cluster.
              type: boolean
            values:
              type: object
              nullable: true
              description: Values defines custom values for this chart
            version:
              type: string
              description: Version defines the chart version
            valuesFrom:
              type: array
              description: ValuesFrom defines the config file we want to ref to. In kubernetes, this will be ConfigMap/Secret
              items:
                type: object
                properties:
                  configMapKeyRef:
                    type: object
                    required:
                      - name
                    description: ConfigMapKeyRef defines a ref to a ConfigMap(in the same namespace)
                    properties:
                      name:
                        type: string
                      key:
                        type: string
                      optional:
                        type: boolean
                  secretKeyRef:
                    type: object
                    required:
                      - name
                    description: SecretKeyRef defines a ref to a Secret(in the same namespace)
                    properties:
                      name:
                        type: string
                      key:
                        type: string
                      optional:
                        type: boolean
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: chartrepos.app.alauda.io
spec:
  group: app.alauda.io
  versions:
    - name: v1alpha1
      served: true
      storage: false
      schema:
        openAPIV3Schema:
          properties:
            spec:
              required:
                - url
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          properties:
            spec:
              required:
                - url
                - type
  names:
    kind: ChartRepo
    listKind: ChartRepoList
    plural: chartrepos
    singular: chartrepo
    shortNames:
      - ctr
  additionalPrinterColumns:
    - name: URL
      type: string
      description: The url of this chart repo
      JSONPath: .spec.url
    - name: Phase
      type: string
      description: The phase of this ChartRepo
      JSONPath: .status.phase
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: charts.app.alauda.io
spec:
  group: app.alauda.io
  versions:
    - name: v1alpha1
      served: true
      storage: false
    - name: v1beta1
      served: true
      storage: true
  names:
    kind: Chart
    listKind: ChartList
    plural: charts
    singular: chart
  additionalPrinterColumns:
    - name: Version
      type: string
      JSONPath: .spec.versions[0].version
    - name: AppVersion
      type: string
      JSONPath: .spec.versions[0].appVersion
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  scope: Namespaced
---
apiVersion: v1
kind: Service
metadata:
  name: captain-webhook
  labels:
    service_name: captain
spec:
  ports:
    - port: 6060
      targetPort: 6060
      name: metrics
  selector:
    app: captain
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: captain
  name: captain-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: captain
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: captain
    spec:
      containers:
      - args:
        - --metrics-addr=0.0.0.0:6060
        - --enable-leader-election
        - --cluster-namespace=$(KUBERNETES_NAMESPACE)
        - --chartrepo-namespace=$(KUBERNETES_NAMESPACE)
        command:
        - /manager
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: alaudapublic/captain:v1.3.1
        imagePullPolicy: IfNotPresent
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
      dnsPolicy: ClusterFirst
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: captain-chartmuseum
  name: captain-chartmuseum
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: captain-chartmuseum
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: captain-chartmuseum
  name: captain-chartmuseum
spec:
  replicas: 1
  selector:
    matchLabels:
      app: captain-chartmuseum
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: captain-chartmuseum
    spec:
      containers:
        - name: chartmuseum
          args:
            - --depth=1
            - --allow-overwrite
          env:
            - name: DEBUG
              value: "1"
            - name: STORAGE
              value: local
            - name: STORAGE_LOCAL_ROOTDIR
              value: /charts
          image: chartmuseum/chartmuseum:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /charts
              name: chart-volume
      volumes:
        - name: chart-volume
          emptyDir: {}
